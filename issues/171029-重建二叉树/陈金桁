class TreeNode{
     TreeNode left,right;
     int value;
     public TreeNode(int value){
         this.value = value;
         left = null;
         right = null;
     }
}
public class Retree {
    public void printPreOrder(TreeNode root){
        if(root==null){
            return;
        }else{
            System.out.print(root.value+" ");
        }
        if(root.left != null){
            printPreOrder(root.left);
        }
        if(root.right != null){
            printPreOrder(root.right);
        }

    }
    public static void main(String[] args) {
        int [] pre = {1,2,4,7,3,5,6,8};
        int [] in = {4,7,2,1,5,3,8,6};
        Retree retree = new Retree();
        TreeNode root = retree.reConstructBinaryTree(pre,in);
        retree.printPreOrder(root);
    }
    public TreeNode reConstructBinaryTree(int [] pre,int [] in){
        TreeNode root = reConstructBinaryTree(pre,0,pre.length-1,in,0,in.length - 1);
        return root;
    }
    private TreeNode reConstructBinaryTree(int [] pre,int startPre,int endPre,int[] in,int startIn,int endIn){
        if(startPre > endPre || startIn > endIn){
            return  null;
        }
        TreeNode root = new TreeNode(pre[startPre]);
        for(int i = startIn;i <= endIn;i++){
            if(in[i] == pre[startPre]){
                root.left = reConstructBinaryTree(pre,startPre + 1,startPre + i - startIn,in,startIn,i - 1);
                root.right = reConstructBinaryTree(pre, i - startIn + startPre + 1,endPre,in,i+1,endIn);
            }
        }
        return root;
    }
}
